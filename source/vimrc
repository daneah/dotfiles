" Vi Compatibility {{{
set nocompatible
" }}}

" UTF-8 {{{
scriptencoding utf-8
set encoding=utf-8
" }}}

" Sane Default Key Bindings {{{
let mapleader=","
nmap ; :
" }}}

" Colors {{{
set t_Co=256
let g:solarized_termtrans = 1
colorscheme solarized
set background=dark
syntax on
nnoremap <Leader>s :SemanticHighlightToggle<cr>
" }}}

" File Handling {{{
set autoindent
set smartindent
filetype plugin on
filetype plugin indent on
autocmd BufNewFile,BufRead *.p8 set syntax=lua
autocmd BufNewFile,BufRead *.vue set filetype=html
autocmd BufNewFile,BufRead *.md,*.mdx set wrap
autocmd BufNewFile,BufRead *.mdx set filetype=javascript
autocmd BufNewFile,BufRead *.ad set filetype=asciidoc
autocmd BufNewFile,BufRead *.zsh-theme set filetype=zsh
autocmd BufNewFile,BufRead *.ad,*.adoc set wrap
autocmd BufNewFile,BufRead *.ad,*.adoc set colorcolumn=55,65,76
set tags=.tags;/
" }}}

" Cursor {{{
set cursorline
" }}}

" Undo {{{
set undofile
set undodir=~/.vim/undo//
" }}}

" Text Width {{{
set nowrap
set colorcolumn=120
nmap <Leader>w :setlocal wrap!<CR>
" }}}

" Paste Formatting {{{
nmap <Leader>p :set paste!<CR>
" }}}

" Line Numbers {{{
set number
nmap <Leader>l :setlocal number!<CR>
nmap <Leader>r :setlocal relativenumber!<CR>
" }}}

" Search {{{
set incsearch
set hlsearch
set ignorecase
set smartcase
set shortmess-=S
nnoremap <space> /
nnoremap <Leader><space> :set hlsearch!<CR>
" }}}

" Tabs {{{
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
imap <S-Tab> <C-o><<
" }}}

" Prude Mode {{{
imap <Up> <nop>
imap <Down> <nop>
imap <Left> <nop>
imap <Right> <nop>
nmap <Up> <nop>
nmap <Down> <nop>
nmap <Left> <nop>
nmap <Right> <nop>
" }}}

" Scrolling {{{
set sidescroll=1
set sidescrolloff=30
set scrolloff=3
set lazyredraw
" }}}

" Movement {{{
nnoremap j gj
nnoremap k gk
set backspace=indent,eol,start
" }}}

" Splits {{{
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

set splitbelow
set splitright
" }}}

" List Chars {{{
set listchars=tab:\|·,nbsp:~,trail:·,precedes:<,extends:>
set list
match ErrorMsg '\s\+$'
" }}}

" Temporary Files {{{
set backupcopy=yes
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
" }}}

" Line Recall {{{
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END
" }}}

" Status Bar {{{
set laststatus=2
set wildmenu

"" Status line
set statusline=
set statusline+=%r%m " read-only status and modified status
set statusline+=%y\ %F " file type and file name

""" Right side
set statusline+=%=
set statusline+=Line\:\ 
set statusline+=%3l\ " current line number
set statusline+=/\ 
set statusline+=%L\ " total lines
set statusline+=%P\  " percentage of lines
set statusline+=\|\ 
set statusline+=Column\:\ 
set statusline+=%-3c
" }}}

" Folding {{{
set foldenable
set foldmethod=indent
set foldlevelstart=10
" }}}

" Underlining {{{
nnoremap <Leader>= yypv$r=
nnoremap <Leader>- yypv$r-
nnoremap <Leader>- yypv$r#
nnoremap <Leader>- yypv$r"
nnoremap <Leader>U yypv$r━
" }}}

" Modelines {{{
set modelines=1
" }}}

" CtrlP {{{
let g:ctrlp_map = '<leader>f'
" }}}

" vim:foldmethod=marker:foldlevel=0
