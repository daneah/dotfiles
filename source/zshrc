export HOMEBREW_NO_ANALYTICS=1

export ZSH=$HOME/.oh-my-zsh
ZSH_CUSTOM=$HOME/.zsh-custom
autoload zmv

ENABLE_CORRECTION="true"

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor root)
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=242"

DISABLE_UPDATE_PROMPT=true

export FZF_DEFAULT_COMMAND='rg --files --hidden'

plugins=( \
    asdf \
    brew \
    bundler \
    docker \
    docker-compose \
    gem \
    git \
    history \
    httpie \
    jira \
    kubectl \
    macos \
    pip \
    poetry \
    redis-cli \
    screen \
    ssh-agent \
    supervisor \
    zsh-autosuggestions \
    zsh-syntax-highlighting \
    history-substring-search \
)

source $ZSH/oh-my-zsh.sh

setopt hist_ignore_all_dups
setopt hist_reduce_blanks

if [ -f $HOME/.aliases.zsh ]; then
    . $HOME/.aliases.zsh
fi

if [ -f $HOME/.functions.zsh ]; then
    . $HOME/.functions.zsh
fi

export PYTHONSTARTUP=$HOME/.pystartup
export PYTHONDONTWRITEBYTECODE=1

export EDITOR=vim
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export GPG_TTY=$(tty)

# poetry
export PATH="${HOME}/.poetry/bin:${PATH}"

# MySQL
export PATH="/usr/local/opt/mysql@5.7/bin:${PATH}"

# direnv
eval "$(direnv hook zsh)"

# Link against Homebrew versions of libraries
local -r LINK_PREFIX="/opt/homebrew/opt"
export CFLAGS="-I$LINK_PREFIX/openssl@1.1/include -I$LINK_PREFIX/zlib/include -I$LINK_PREFIX/sqlite/include -I$LINK_PREFIX/libffi/include -I$LINK_PREFIX/libpng/include -I$LINK_PREFIX/zstd/include"
export LDFLAGS="-L$LINK_PREFIX/openssl@1.1/lib -L$LINK_PREFIX/zlib/lib -L$LINK_PREFIX/sqlite/lib -L$LINK_PREFIX/libffi/lib -L$LINK_PREFIX/libpng/lib -L$LINK_PREFIX/zstd/lib"
export PKG_CONFIG_PATH="$LINK_PREFIX/openssl@1.1/lib/pkgconfig:$LINK_PREFIX/zlib/lib/pkgconfig:$LINK_PREFIX/sqlite/lib/pkgconfig:$LINK_PREFIX/libffi/lib/pkgconfig:$LINK_PREFIX/libpng/lib/pkgconfig:$LINK_PREFIX/zstd/lib/pkgconfig"

# locale
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

export RIPGREP_CONFIG_PATH="${HOME}/.ripgreprc"

# zoxide
if type "zoxide" 2>&1 > /dev/null; then
    eval "$(zoxide init zsh)"
fi

export PATH="$PATH:$HOME/.local/bin"

export STARSHIP_CONFIG="$HOME/.starship.toml"
if type "starship" 2>&1 > /dev/null; then
    eval "$(starship init zsh)"
fi

if [ -f $HOME/.asdf/asdf.sh ]; then
    . $HOME/.asdf/asdf.sh
    fpath=(${ASDF_DIR}/completions $fpath)
    autoload -Uz compinit && compinit
fi
